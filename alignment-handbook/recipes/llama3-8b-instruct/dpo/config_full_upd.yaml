# Model arguments
model_name_or_path: model/llama3-8b-instruct
torch_dtype: bfloat16

# Data training arguments
# For definitions, see: src/h4/training/config.py
dataset_mixer:
##### ATTENTION: according to the paper, experiments conducted on llama3-8b-instruct use the same dataset as that of zephyr #####
##### so no modification here #####
  dataset/ultrafeedback_binarized: 1.0


dataset_splits:
- train
- test
preprocessing_num_workers: 12

# DPOTrainer arguments
bf16: true
##### ATTENTION: according to the paper, experiments conducted on llama3-8b-instruct use beta=0.01 instead of 0.1. #####
beta: 0.05
do_eval: false
evaluation_strategy: steps
eval_steps: 1000
gradient_accumulation_steps: 8
gradient_checkpointing: true
gradient_checkpointing_kwargs:
  use_reentrant: False
##### ATTENTION: not sure about how to modify this, so leave it untouched. #####
hub_model_id: vangard703/zephyr-7b-beta-Ultrafeedback-2K

##### ATTENTION: according to the paper, experiments conducted on llama3-8b-instruct use lr=1e-5 instead of 5e-7. #####
learning_rate: 1.0e-6
log_level: info
logging_steps: 10
lr_scheduler_type: cosine
max_length: 2048
max_prompt_length: 1024
num_train_epochs: 1
optim: adamw_torch
output_dir: save_model/llama3-8b-instruct-Ultrafeedback-2K
per_device_eval_batch_size: 1
per_device_train_batch_size: 1
push_to_hub: False
save_strategy: 'no'
save_steps: 200
save_total_limit: 1
seed: 42
warmup_ratio: 0.1
loss_type: weighted
confidence_dir: save_confidence
self_refine_threshold: 0.1
ref_model_for_refine: model/llama3-8b-instruct
